// My Niri Config
// https://github.com/YaLTeR/niri/wiki/Configuration:-Overview

// --- Input Devices ---
input {
    keyboard {
        xkb {
            layout "us,ru,ua"
            options "grp:alt_shift_toggle"
        }
        repeat-delay 300
        repeat-rate 50
    }

    touchpad {
        tap
        natural-scroll
    }

    mouse {
        accel-profile "flat"
    }

    // Uncomment to warp mouse to center of new windows
    // warp-mouse-to-focus

    // Uncomment to focus windows/outputs on mouse hover
    // focus-follows-mouse max-scroll-amount="0%"
}

cursor {
    xcursor-theme "Bibata-Modern-Classic"
}

// --- Output Configuration ---
output "eDP-1" {
    mode "1920x1080@144"
    scale 1.25
    transform "normal"
}

// --- Layout Settings ---
layout {
    gaps 12
    center-focused-column "never"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    default-column-width { proportion 0.5; }

    focus-ring {
        off
        width 4
        active-color "#eca05e"
        inactive-color "#505050"
    }

    border {
        width 2
        active-color "#bb955d"
        inactive-color "#505050"
    }

    background-color "transparent"

    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }

    shadow {
        on
        draw-behind-window false
        color "#bb955d"
        inactive-color "#505050"
    }
}

// --- Startup Applications ---
spawn-at-startup "xwayland-satellite"
spawn-at-startup "swww-daemon"
spawn-at-startup "mate-polkit"
spawn-at-startup "quickshell"
spawn-at-startup "hypridle"
spawn-at-startup "steam"
spawn-at-startup "vesktop"

// --- Environment Variables ---
environment {
    DISPLAY ":0"
    STEAM_FORCE_DESKTOPUI_SCALING "1.25"
    QT_AUTO_SCREEN_SCALE_FACTOR "1"
    ELECTRON_OZONE_PLATFORM_HINT "auto"
    QT_QPA_PLATFORMTHEME "qt6ct"
    XDG_SESSION_TYPE "wayland"
    MOZ_ENABLE_WAYLAND "1"
    TERMINAL "kitty"
    TERM "kitty"
}

hotkey-overlay {
    skip-at-startup
}

// Uncomment to prefer no client-side decorations
prefer-no-csd

screenshot-path "/home/xdenotte/Изображения/Screenshot from %Y-%m-%d %H-%M-%S.png"
// screenshot-path null

// --- Animations ---
animations {
    // off
    // slowdown 1.5
}

// --- Window Rules ---
window-rule {
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    default-column-width {}
}

window-rule {
    match app-id=r#"firefox$"# title="^Картинка в картинке$"
    open-floating true
}

window-rule {
    match app-id=r#"$"# title="^Картинка в картинке$"
    open-floating true
}

window-rule {
    match app-id=r#"org.gnome.Loupe$"#
    open-floating true
}

window-rule {
    match app-id=r#"pavucontrol$"#
    open-floating true
}

window-rule {
    match app-id="steam" title=r#"^notificationtoasts_\d+_desktop$"#
    open-focused false
    default-floating-position x=10 y=10 relative-to="bottom-right"
}

window-rule {
    geometry-corner-radius 20
    clip-to-geometry true
}

// Example: Block screen capture for password managers
// /-window-rule {
//     match app-id=r#"^org\.keepassxc\.KeePassXC$"#
//     match app-id=r#"^org\.gnome\.World\.Secrets$"#
//     block-out-from "screen-capture"
// }


// --- Keybinds ---
binds {
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Launchers & Utilities
    Mod+Return { spawn "kitty"; }
    Mod+D { spawn "qs" "ipc" "call" "globalIPC" "toggleLauncher"; }
    Mod+M { spawn "pavucontrol"; }
    MOD+Shift+B { spawn "chromium"; }
    Mod+Shift+Q { quit; }
    Mod+A { spawn "nemo"; }
    Super+L { spawn "qs" "ipc" "call" "globalIPC" "toggleLock"; }
    Mod+K { spawn "kate" "/home/xdenotte/.config/niri/config.kdl"; }

    // Volume Control
    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

    Mod+Q { close-window; }

    // Focus Movement (Arrows & HJKL)
    Mod+Left { focus-column-left; }
    Mod+Down { focus-window-down; }
    Mod+Up { focus-window-up; }
    Mod+Right { focus-column-right; }

    // Move Windows/Columns (Ctrl + Arrows & HJKL)
    Mod+Ctrl+Left { move-column-left; }
    Mod+Ctrl+Down { move-window-down; }
    Mod+Ctrl+Up { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }
    Mod+Ctrl+H { move-column-left; }
    Mod+Ctrl+J { move-window-down; }
    Mod+Ctrl+K { move-window-up; }
    Mod+Ctrl+L { move-column-right; }

    Mod+Home { focus-column-first; }
    Mod+End { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End { move-column-to-last; }

    // Monitor Navigation (Shift + Arrows & HJKL)
    Mod+Shift+Left { focus-monitor-left; }
    Mod+Shift+Down { focus-monitor-down; }
    Mod+Shift+Up { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }
    Mod+Shift+H { focus-monitor-left; }
    Mod+Shift+J { focus-monitor-down; }
    Mod+Shift+K { focus-monitor-up; }
    Mod+Shift+L { focus-monitor-right; }

    // Move Column to Monitor (Ctrl+Shift + Arrows & HJKL)
    Mod+Shift+Ctrl+Left { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+H { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L { move-column-to-monitor-right; }

    // Workspace Navigation (Page_Down/Up & UI)
    Mod+Page_Down { focus-workspace-down; }
    Mod+Page_Up { focus-workspace-up; }
    Mod+U { focus-workspace-down; }
    Mod+I { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up { move-column-to-workspace-up; }
    Mod+Ctrl+U { move-column-to-workspace-down; }
    Mod+Ctrl+I { move-column-to-workspace-up; }

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up { move-workspace-up; }
    Mod+Shift+U { move-workspace-down; }
    Mod+Shift+I { move-workspace-up; }

    // Mouse Wheel Workspace/Column Navigation
    Mod+WheelScrollDown cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight { focus-column-right; }
    Mod+WheelScrollLeft { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft { move-column-left; }

    Mod+Shift+WheelScrollDown { focus-column-right; }
    Mod+Shift+WheelScrollUp { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp { move-column-left; }

    // Numeric Workspace Switching
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    // Window/Column Manipulation
    Mod+BracketLeft { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }
    Mod+Comma { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+C { center-column; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    Mod+V { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    // Screenshots
    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // System Actions
    Ctrl+Alt+Delete { quit; }
    Mod+Shift+P { power-off-monitors; }

    // Brightness Control
    XF86MonBrightnessUp allow-when-locked=true { spawn "brightnessctl" "set" "10%+"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "set" "10%-"; }
}

// --- Layer Rules ---
layer-rule {
    match namespace="^swww-daemon$"
    place-within-backdrop true
}
